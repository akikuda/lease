server:
  port: 8081

spring:
  jackson:
    time-zone: GMT+8
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://192.168.122.101:3306/lease?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=GMT%2b8
    username: root
    password: 123456
    hikari:
      connection-test-query: SELECT 1 # 自动检测连接
      connection-timeout: 60000 #数据库连接超时时间,默认30秒
      idle-timeout: 500000 #空闲连接存活最大时间，默认600000（10分钟）
      max-lifetime: 540000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      maximum-pool-size: 12 #连接池最大连接数，默认是10
      minimum-idle: 10 #最小空闲连接数量
      pool-name: SPHHikariPool # 连接池名称
  data:
    redis:
      host: 192.168.122.101
      port: 6379
      database: 0
      password: toki123456
  ai:
    dashscope:
      api-key: ${DASHSCOPE_API_KEY}
      base-url: "https://dashscope.aliyuncs.com/compatible-mode/v1"
      chat:
        options:
          model: qwen-max
    openai:
      api-key: ${DASHSCOPE_API_KEY}
      base-url: "https://dashscope.aliyuncs.com/compatible-mode"
      chat:
        options:
          model: qwen-max-latest
          temperature: 0.9 # 随机性，越大越随机
  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  rabbitmq:
    host: 192.168.122.101 # 你的虚拟机IP
    port: 5672 # 端口
    virtual-host: /lease # 虚拟主机,在Rabbitmq控制台创建
    username: toki # 用户名
    password: 123456 # 密码
    connection-timeout: 1s # 设置MQ的连接超时时间
    # 生产者
    template:
      retry:
        enabled: true # 开启生产者失败重试机制
        initial-interval: 1000ms # 失败后的初始等待时间
        multiplier: 1 # 失败后下次的等待时长倍数，下次等待时长 = initial-interval * multiplier
        max-attempts: 3 # 最大重试次数
    # 消费者
    listener:
      simple:
        prefetch: 1 # 每次只能获取一条消息，处理完成才能获取下一个消息,实现能者多劳效果，有效避免消息积压问题。
        # 消费者确认机制
        acknowledge-mode: auto
        # 消费者失败重试机制
        retry:
          enabled: true # 开启消费者失败重试
          initial-interval: 1000ms # 初识的失败等待时长为1秒
          multiplier: 1 # 失败的等待时长倍数，下次等待时长 = multiplier * last-interval
          max-attempts: 3 # 最大重试次数
          stateless: true # true无状态；false有状态。如果业务中包含事务，这里改为false

logging:
  level:
    org.springframework.ai: debug

#用于打印框架生成的sql语句，便于调试
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

springdoc:
  default-flat-param-object: true

minio:
  endpoint: http://192.168.122.101:8000
  access-key: admin
  secret-key: admin123
  bucket-name: lease-app-group

aliyun:
  sms:
    access-key-id: LTAI5tKsEJtLgci3f4hWNuxj
    access-key-secret: Ia7oAv39S5dBez4Q8AUstF7oueZ3rU
    endpoint: dysmsapi.aliyuncs.com